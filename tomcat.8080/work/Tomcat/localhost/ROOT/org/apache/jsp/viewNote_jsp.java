/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-20 20:25:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import uk.ac.ucl.model.Model;
import uk.ac.ucl.model.ModelFactory;

public final class viewNote_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("uk.ac.ucl.model.Model");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("uk.ac.ucl.model.ModelFactory");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    Model model = ModelFactory.getModel();
    String noteIndex = request.getParameter("noteindex");

    int index = (noteIndex != null && !noteIndex.isEmpty()) ? Integer.parseInt(noteIndex) : -1;

    List<String> noteIndexes = model.getNoteIndexes();
    List<String> noteNames = model.getNoteNames();
    List<String> noteTopics = model.getNoteTopics();
    List<String> noteSummaries = model.getNoteSummaries();
    List<String> noteContents = model.getNoteContents();
    List<String> noteUrls = model.getNoteUrls();

    int adjustedIndex = noteIndexes.indexOf(noteIndex);

    String noteName = (adjustedIndex >= 0) ? noteNames.get(adjustedIndex) : "**ERROR: Note Name Not Found**";
    String topic = (adjustedIndex >= 0) ? noteTopics.get(adjustedIndex) : "**ERROR: Topic Not Found**";
    String summary = (adjustedIndex >= 0) ? noteSummaries.get(adjustedIndex) : "**ERROR: Summary Not Found**";
    String noteContent = (adjustedIndex >= 0) ? noteContents.get(adjustedIndex) : "**ERROR: Content Not Found**";
    String noteUrl = (adjustedIndex >= 0 && noteUrls.get(adjustedIndex) != null && !noteUrls.get(adjustedIndex).isEmpty()) ? "uploads/" + noteUrls.get(adjustedIndex) : "**ERROR: No File Attached**";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>View Note</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("        .header {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 15px 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .header h1 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        .header a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: white;\r\n");
      out.write("            margin: 0 10px;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .header a:hover {\r\n");
      out.write("            background-color: #003f7f;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            margin: 40px auto;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        h2 {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        .note-content {\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            background: #f9f9f9;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            word-wrap: break-word;\r\n");
      out.write("            overflow-wrap: break-word;\r\n");
      out.write("            white-space: normal;\r\n");
      out.write("            max-width: 100%;\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: auto;\r\n");
      out.write("            max-width: 100%;\r\n");
      out.write("            min-width: 50%;\r\n");
      out.write("            height: auto;\r\n");
      out.write("            min-height: 50px;\r\n");
      out.write("        }\r\n");
      out.write("        .attachment {\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .attachment a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: #007bff;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("        .attachment a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("        .back-link {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: #007bff;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("        .back-link:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("        .note-summary {\r\n");
      out.write("            display: none;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #f9f9f9;\r\n");
      out.write("            border-left: 4px solid #007bff;\r\n");
      out.write("            font-style: italic;\r\n");
      out.write("            color: #555;\r\n");
      out.write("        }\r\n");
      out.write("        .note-item {\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            padding-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("      <h1 onclick=\"location.href='index.html'\">&#128218; You-Notes</h1>\r\n");
      out.write("      <div>\r\n");
      out.write("        <a href=\"addNote.jsp\">New Note</a>\r\n");
      out.write("        <a href=\"noteList.jsp\">View Notes</a>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h2>");
      out.print( noteName );
      out.write("</h2>\r\n");
      out.write("        <div class=\"note-content\">\r\n");
      out.write("            <h3>Topic: ");
      out.print( topic );
      out.write("</h3>\r\n");
      out.write("            <p><strong>Summary:</strong> ");
      out.print( summary );
      out.write("</p>\r\n");
      out.write("            <h2>Content:</h2>\r\n");
      out.write("            <p>");
      out.print( noteContent.replace("\n", "<br>") );
      out.write("</p>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 if (noteUrl != null && !noteUrl.isEmpty() && !noteUrl.equals("**ERROR: No File Attached**")) { 
      out.write("\r\n");
      out.write("            <div class=\"attachment\">\r\n");
      out.write("                <p><a href=\"");
      out.print( noteUrl );
      out.write("\" target=\"_blank\">📁 View Attached File</a></p>\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        <a href=\"noteList.jsp\" class=\"back-link\">Back to Notes</a>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
